<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7MRnB9Z5QQAAAABJRU5ErkJggg==
</value>
  </data>
</root>