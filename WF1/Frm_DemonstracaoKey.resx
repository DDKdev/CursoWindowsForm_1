<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>